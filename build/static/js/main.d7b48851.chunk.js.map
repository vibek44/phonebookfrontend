{"version":3,"sources":["component/Person.jsx","component/Filterform.jsx","component/Personform.jsx","services/person.js","component/Notification.jsx","App.js","index.js"],"names":["Person","person","deletePerson","name","number","onClick","Filter","value","handleFiltered","onChange","Personform","props","onSubmit","addPerson","valuename","handlePersonInput","type","valuenumber","handlePersonNumber","baseurl","personService","getAll","axios","get","then","response","data","create","newObject","post","remove","id","delete","update","changedperson","put","Notification","notification","message","errormessage","className","App","useState","persons","setPersons","newName","setNewName","newNumber","setNewNumber","newFilter","setFilteredContact","setNotification","filteredContact","filter","el","toUpperCase","includes","useEffect","initialpersons","event","target","preventDefault","some","toLowerCase","trim","alert","find","responsedata","map","setTimeout","catch","error","newperson","returnedPerson","concat","window","confirm","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d7b48851.chunk.js","sourcesContent":["import React from 'react'\n\nconst Person=({person,deletePerson})=> \n<p>{person.name} {person.number} \n<button onClick={deletePerson }>delete</button>\n</p>\n\nexport default Person;","const Filter=({value,handleFiltered})=>\n<>Filter shown with <input value={value} onChange={handleFiltered} /></>\n\nexport default Filter","const Personform=(props)=> \n                        <form onSubmit={props.addPerson}>\n                        <div>\n                        Name: <input   value={props.valuename} \n                        onChange={props.handlePersonInput} />\n                        </div>\n                        <div>\n                        Number: <input  type=\"number\" \n                         value={props.valuenumber} \n                         onChange={props.handlePersonNumber} />\n                        </div>\n                        <div>\n                        <button type=\"submit\"  >add</button>\n                        </div>\n                        </form>\n\nexport default Personform","import axios from 'axios'\nconst baseurl='http://localhost:3001/api/persons'\n\nconst getAll=()=>{\n    const request=axios.get(baseurl)\n    return request.then((response)=>response.data)\n}\n\nconst create=(newObject)=>{\n    const request=(axios.post(baseurl,newObject))\n    return request.then((response)=>response.data)\n    }\n\nconst update=(id,changedperson)=>{\n    const request=(axios.put(`${baseurl}/${id}`,changedperson))\n    return request.then((response)=>response.data)\n}\n\nconst remove=(id)=>{\n   const request= axios.delete(`${baseurl}/${id}`)\n   return request.then((response)=>response.data) \n}\n\nconst personService={ getAll,create,remove,update }\n\nexport default personService\n","const Notification=({notification})=>{\n    if(notification.message===null&&notification.errormessage===null){\n        return null\n    }\n    else if(notification.message){\n        return(\n            <p className='notification'>{notification.message}</p>\n        )\n    }\n    else{\n        return(\n            <p className='error'>{notification.errormessage}</p>\n        )\n    }\n}\n\nexport default Notification","\nimport React, { useState,useEffect } from 'react'\nimport Person from './component/Person'\nimport Filter from './component/Filterform'\nimport Personform from './component/Personform'\nimport personService from './services/person'\nimport Notification from './component/Notification'\nimport './index.css'\n\n\nconst App = () => {\nconst [ persons, setPersons ] = useState([]) \n\nconst [ newName, setNewName ] = useState('')\n\nconst [ newNumber, setNewNumber ] = useState('')\n\nconst [ newFilter, setFilteredContact ] = useState('')\n\nconst [ notification, setNotification ] = useState({message:null,errormessage:null})\n\nconst filteredContact=persons.filter((el)=>el.name.toUpperCase().includes(newFilter.toUpperCase()))\n\n\nuseEffect(()=>{\n   personService\n   .getAll()\n  .then(initialpersons=>setPersons(initialpersons))\n  \n},[]) \n\n\nconst handlePersonInput=(event)=>setNewName(event.target.value)\n\nconst handlePersonNumber=(event)=>setNewNumber(event.target.value)\n\nconst handleFiltered=(event)=>setFilteredContact(event.target.value)\n\n \nconst addPerson=(event)=>{\n                event.preventDefault()\n                 if(newName&&newNumber) { \n                if( persons.some((el)=>el.name.toLowerCase()===newName.trim().toLowerCase()) ) {\n                    alert(`${newName} is already added to phonebook,Replace old number with new`)\n                    const person=persons.find((el)=>el.name.toLowerCase()===newName.trim().toLowerCase())\n                    const changedperson={...person,number:newNumber}\n                    personService\n                    .update(person.id,changedperson)\n                    .then(responsedata=>{\n                      setPersons(persons.map((el)=>person.id!==el.id ? el:responsedata))\n                      setNewName('')\n                      setNewNumber('')\n                      setNotification({...notification,message:`changed number from ${person.number} to ${responsedata.number}`})\n                      setTimeout(()=>{\n                        setNotification({...notification,message:null})},5000)\n                    })\n                    .catch((error)=>{\n                    setNotification({...notification,errormessage:`Information of ${newName} has been removed`}) })\n                    } \n\n                else{\n                  const newperson={name:newName,number:newNumber}\n                  personService\n                  .create(newperson)\n                  .then(returnedPerson=>{\n                    setPersons(persons.concat(returnedPerson))\n                    setNotification({...notification,message:`Added ${newperson.name}`})\n                 \n                    setNewName('') \n                    setNewNumber('')\n                    setTimeout(()=>{\n                      setNotification({...notification,message:null})},5000)\n                    })\n                   }}\n                else{ setNotification({...notification,errormessage:'name or number is missing'})\n                      setTimeout(()=>{\n                      setNotification({...notification,message:null})},5000)\n                     \n                         }}\n\n const deletePerson=(id,name)=>{\n                window.confirm(`Delete ${name} ?`)\n                personService\n                .remove(id)\n                setNotification({...notification,message:`Removed ${name}`})\n                setTimeout(()=>{\n                  setNotification({...notification,message:null})},3000)\n                setPersons(persons.filter((person)=>id!==person.id))\n                  }\n\n return (\n            <div>\n            <h1>Phonebook</h1>\n            <Notification notification={notification}/>\n            <Filter  value={newFilter} handleFiltered={handleFiltered}/>\n            <h2>Add new contact</h2>\n            <Personform addPerson={addPerson} \n              valuename={newName}\n              valuenumber={newNumber}\n              handlePersonInput={handlePersonInput}\n              handlePersonNumber={handlePersonNumber} />\n           \n            <h2>Numbers</h2>\n           {filteredContact.map((person)=>\n           <Person key={person.id} \n            person={person} \n            deletePerson={()=>deletePerson(person.id,person.name)} /> )}\n           \n            </div>\n        )\n}\n\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}